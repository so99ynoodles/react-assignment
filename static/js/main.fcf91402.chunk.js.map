{"version":3,"sources":["components/SelectFormField/index.tsx","components/TextFormField/index.tsx","components/PreOrderForm/Step1.tsx","components/PreOrderForm/helpers.ts","components/PreOrderForm/Step2.tsx","components/PreOrderForm/Step3.tsx","components/PreOrderForm/Step4.tsx","components/PreOrderForm/Success.tsx","components/StepProgress/index.tsx","components/PreOrderForm/index.tsx","validator/index.ts","App.tsx","index.tsx"],"names":["SelectFormField","field","form","label","options","onChange","props","errorText","getIn","touched","name","errors","FormControl","fullWidth","error","InputLabel","Select","e","map","option","MenuItem","key","value","FormHelperText","TextFormField","TextField","margin","helperText","mealOptions","Step1","formikProps","setFieldValue","setStep","component","initialValues","restaurant","dishes","type","Button","disabled","meal","people","onClick","color","variant","getAvailableRestaurant","selectedMeal","undefined","filter","dish","availableMeals","includes","Step2","values","Array","from","Set","ButtonGroup","Dish","index","selectedDishes","currentDish","filteredOptions","Step3","selectedRestaurant","isValid","dishesOptions","id","push","length","_","preventDefault","servings","isArray","Box","mt","Step4","isSubmitting","submitForm","List","ListItem","ListItemText","primary","secondary","toUpperCase","Paper","elevation","find","d","Success","StepProgress","activeStep","steps","Stepper","alternativeLabel","Step","StepLabel","handleSubmit","console","log","stepPages","Container","styled","FormContainer","PreOrderForm","useState","step","validationSchema","dishSchema","yup","shape","required","oneOf","min","max","of","test","this","parent","reduce","acc","val","generateSchema","onSubmit","initialErrors","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcf91402.chunk.js","sourcesContent":["import React from 'react';\nimport {FieldProps, getIn} from 'formik';\nimport {\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tMenuItem,\n\tFormHelperText,\n} from '@material-ui/core';\n\nconst SelectFormField: React.FC<\n\tFieldProps & {\n\t\tlabel: string;\n\t\toptions: Array<{label: string; value: string}>;\n\t\tonChange: (item: any) => void;\n\t}\n> = ({field, form, label, options, onChange, ...props}) => {\n\tconst errorText =\n\t\tgetIn(form.touched, field.name) && getIn(form.errors, field.name);\n\treturn (\n\t\t<FormControl fullWidth error={!!errorText}>\n\t\t\t{label && <InputLabel>{label}</InputLabel>}\n\t\t\t<Select\n\t\t\t\tfullWidth\n\t\t\t\t{...field}\n\t\t\t\t{...props}\n\t\t\t\tonChange={e => {\n\t\t\t\t\tif (onChange) onChange(e);\n\t\t\t\t\tfield.onChange(e);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{options.map(option => (\n\t\t\t\t\t<MenuItem key={option.value} value={option.value}>\n\t\t\t\t\t\t{option.label}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t\t<FormHelperText>{errorText}</FormHelperText>\n\t\t</FormControl>\n\t);\n};\n\nexport default SelectFormField;\n","import React from 'react';\nimport {FieldProps, getIn} from 'formik';\nimport {TextField} from '@material-ui/core';\n\nconst TextFormField: React.FC<FieldProps> = ({field, form, ...props}) => {\n\tconst errorText =\n\t\tgetIn(form.touched, field.name) && getIn(form.errors, field.name);\n\treturn (\n\t\t<TextField\n\t\t\tfullWidth\n\t\t\tmargin=\"normal\"\n\t\t\thelperText={errorText}\n\t\t\terror={!!errorText}\n\t\t\t{...field}\n\t\t\t{...props}\n\t\t/>\n\t);\n};\n\nexport default TextFormField;\n","import React, {Dispatch, SetStateAction} from 'react';\nimport {Field, FormikProps} from 'formik';\nimport SelectFormField from '../SelectFormField';\nimport TextFormField from '../TextFormField';\nimport {Button} from '@material-ui/core';\nimport {initialValues} from '.';\n\nconst mealOptions = [\n\t{\n\t\tvalue: 'breakfast',\n\t\tlabel: 'Breakfast',\n\t},\n\t{\n\t\tvalue: 'lunch',\n\t\tlabel: 'Lunch',\n\t},\n\t{\n\t\tvalue: 'dinner',\n\t\tlabel: 'Dinner',\n\t},\n];\n\nconst Step1: React.FC<{\n\tformikProps: FormikProps<FormTypes>;\n\tsetStep: Dispatch<SetStateAction<number>>;\n}> = ({formikProps: {errors, setFieldValue}, setStep}) => (\n\t<>\n\t\t<Field\n\t\t\tcomponent={SelectFormField}\n\t\t\tname=\"meal\"\n\t\t\tlabel=\"Please Select a Meal\"\n\t\t\toptions={mealOptions}\n\t\t\tonChange={() => {\n\t\t\t\tsetFieldValue('restaurant', initialValues.restaurant);\n\t\t\t\tsetFieldValue('dishes', initialValues.dishes);\n\t\t\t}}\n\t\t/>\n\t\t<Field\n\t\t\tcomponent={TextFormField}\n\t\t\tname=\"people\"\n\t\t\tlabel=\"Please Enter Number of People\"\n\t\t\ttype=\"number\"\n\t\t/>\n\t\t<Button\n\t\t\tdisabled={!!errors.meal || !!errors.people}\n\t\t\tonClick={() => setStep(1)}\n\t\t\tcolor=\"primary\"\n\t\t\tvariant=\"contained\"\n\t\t>\n\t\t\tNext\n\t\t</Button>\n\t</>\n);\n\nexport default Step1;\n","import {dishes} from '../../data/dishes.json';\n\nexport const getAvailableRestaurant = (\n\tselectedMeal: string | undefined,\n): Array<{\n\tid: number;\n\tname: string;\n\trestaurant: string;\n\tavailableMeals: string[];\n}> =>\n\tselectedMeal === undefined\n\t\t? []\n\t\t: dishes.filter(dish => dish.availableMeals.includes(selectedMeal));\n\nexport const getAvailableRestaurantsOptions = (\n\tselectedMeal: string | undefined,\n): Array<{label: string; value: string}> =>\n\tArray.from(\n\t\tnew Set(getAvailableRestaurant(selectedMeal).map(dish => dish.restaurant)),\n\t).map(restaurant => ({\n\t\tlabel: restaurant,\n\t\tvalue: restaurant,\n\t}));\n\nexport const getAvailableDishesOptions = (\n\tselectedMeal: string | undefined,\n\tselectedRestaurant: string | undefined,\n): Array<{label: string; value: string}> =>\n\tselectedRestaurant === undefined\n\t\t? []\n\t\t: getAvailableRestaurant(selectedMeal)\n\t\t\t\t.filter(dish => dish.restaurant === selectedRestaurant)\n\t\t\t\t.map(dish => ({\n\t\t\t\t\tvalue: `${dish.id}`,\n\t\t\t\t\tlabel: dish.name,\n\t\t\t\t}));\n","import React, {Dispatch, SetStateAction} from 'react';\nimport {Field, FormikProps} from 'formik';\nimport SelectFormField from '../SelectFormField';\nimport {getAvailableRestaurantsOptions} from './helpers';\nimport {Button, ButtonGroup} from '@material-ui/core';\nimport {initialValues} from '.';\n\nconst Step2: React.FC<{\n\tformikProps: FormikProps<FormTypes>;\n\tsetStep: Dispatch<SetStateAction<number>>;\n}> = ({formikProps: {values, errors, setFieldValue}, setStep}) => (\n\t<>\n\t\t<Field\n\t\t\tcomponent={SelectFormField}\n\t\t\tname=\"restaurant\"\n\t\t\tlabel=\"Please Select a Restaurant\"\n\t\t\toptions={getAvailableRestaurantsOptions(values.meal)}\n\t\t\tonChange={() => {\n\t\t\t\tsetFieldValue('dishes', initialValues.dishes);\n\t\t\t}}\n\t\t/>\n\t\t<ButtonGroup>\n\t\t\t<Button onClick={() => setStep(0)} color=\"default\" variant=\"contained\">\n\t\t\t\tPrevious\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tdisabled={!!errors.restaurant}\n\t\t\t\tonClick={() => setStep(2)}\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tvariant=\"contained\"\n\t\t\t>\n\t\t\t\tNext\n\t\t\t</Button>\n\t\t</ButtonGroup>\n\t</>\n);\n\nexport default Step2;\n","import React, {Dispatch, SetStateAction} from 'react';\nimport {FieldArray, Field, FormikProps, getIn} from 'formik';\nimport SelectFormField from '../SelectFormField';\nimport {getAvailableDishesOptions} from './helpers';\nimport TextFormField from '../TextFormField';\nimport {\n\tButton,\n\tFormHelperText,\n\tFormControl,\n\tButtonGroup,\n\tBox,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst Dish: React.FC<{\n\tvalues: FormTypes;\n\tindex: number;\n\toptions: Array<{label: string; value: string}>;\n\tselectedDishes: (string | undefined)[];\n}> = ({values, index, options, selectedDishes}) => {\n\tconst currentDish = values.dishes && values.dishes[index].dish;\n\tconst filteredOptions = options.filter(\n\t\toption =>\n\t\t\toption.value === currentDish || !selectedDishes.includes(option.value),\n\t);\n\treturn (\n\t\t<div key={index}>\n\t\t\t<Field\n\t\t\t\tcomponent={SelectFormField}\n\t\t\t\tlabel=\"Please Select a Dish\"\n\t\t\t\tname={`dishes.${index}.dish`}\n\t\t\t\toptions={filteredOptions}\n\t\t\t/>\n\t\t\t<Field\n\t\t\t\tcomponent={TextFormField}\n\t\t\t\tlabel=\"Please enter no. of servings\"\n\t\t\t\tname={`dishes.${index}.servings`}\n\t\t\t\ttype=\"number\"\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nconst Step3: React.FC<{\n\tformikProps: FormikProps<FormTypes>;\n\tsetStep: Dispatch<SetStateAction<number>>;\n}> = ({formikProps: {values, isValid, errors}, setStep}) => {\n\tconst selectedDishes = (values.dishes || []).map(dish => dish.dish);\n\tconst dishesOptions = getAvailableDishesOptions(\n\t\tvalues.meal,\n\t\tvalues.restaurant,\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<FieldArray name=\"dishes\">\n\t\t\t\t{({push, form, name}) => {\n\t\t\t\t\tconst errorText =\n\t\t\t\t\t\tgetIn(form.touched, name) && getIn(form.errors, name);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{values.dishes &&\n\t\t\t\t\t\t\t\tvalues.dishes.length > 0 &&\n\t\t\t\t\t\t\t\tvalues.dishes.map((_, index) => (\n\t\t\t\t\t\t\t\t\t<Dish\n\t\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\t\t\t\toptions={dishesOptions}\n\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\tselectedDishes={selectedDishes}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{values.dishes && values.dishes.length < dishesOptions.length && (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={e => {\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\tpush({\n\t\t\t\t\t\t\t\t\t\t\tdish: '',\n\t\t\t\t\t\t\t\t\t\t\tservings: 1,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<AddIcon /> Add dishes\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{errorText && !Array.isArray(errorText) && (\n\t\t\t\t\t\t\t\t<FormControl error={!!errorText}>\n\t\t\t\t\t\t\t\t\t<FormHelperText>{errorText}</FormHelperText>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</FieldArray>\n\t\t\t<Box mt=\"2rem\">\n\t\t\t\t<ButtonGroup>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => setStep(1)}\n\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t>\n\t\t\t\t\t\tPrevious\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={!isValid}\n\t\t\t\t\t\tonClick={() => setStep(3)}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t>\n\t\t\t\t\t\tNext\n\t\t\t\t\t</Button>\n\t\t\t\t</ButtonGroup>\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nexport default Step3;\n","import React, {Dispatch, SetStateAction} from 'react';\nimport {FormikProps} from 'formik';\nimport {\n\tButton,\n\tBox,\n\tList,\n\tListItem,\n\tListItemText,\n\tButtonGroup,\n\tPaper,\n} from '@material-ui/core';\nimport {dishes} from '../../data/dishes.json';\n\nconst getDish = (\n\tid: string,\n): {id: number; name: string; availableMeals: string[]; restaurant: string} =>\n\tdishes.find(d => +d.id === +id) || {\n\t\tid: 0,\n\t\tname: '',\n\t\trestaurant: '',\n\t\tavailableMeals: [],\n\t};\n\nconst Step4: React.FC<{\n\tformikProps: FormikProps<FormTypes>;\n\tsetStep: Dispatch<SetStateAction<number>>;\n}> = ({formikProps: {values, isValid, isSubmitting, submitForm}, setStep}) => (\n\t<>\n\t\t<List>\n\t\t\t<ListItem>\n\t\t\t\t<ListItemText\n\t\t\t\t\tprimary=\"Meal\"\n\t\t\t\t\tsecondary={(values.meal || '').toUpperCase()}\n\t\t\t\t/>\n\t\t\t</ListItem>\n\t\t\t<ListItem>\n\t\t\t\t<ListItemText primary=\"No. of People\" secondary={values.people} />\n\t\t\t</ListItem>\n\t\t\t<ListItem>\n\t\t\t\t<ListItemText primary=\"Restaurant\" secondary={values.restaurant} />\n\t\t\t</ListItem>\n\t\t\t<List>\n\t\t\t\t<ListItem>\n\t\t\t\t\t<ListItemText primary=\"Dishes\" />\n\t\t\t\t</ListItem>\n\t\t\t\t<Paper elevation={4}>\n\t\t\t\t\t{(values.dishes || []).map(dish => (\n\t\t\t\t\t\t<List key={dish.dish}>\n\t\t\t\t\t\t\t<ListItem>\n\t\t\t\t\t\t\t\t<ListItemText\n\t\t\t\t\t\t\t\t\tprimary={getDish(dish.dish || '').name}\n\t\t\t\t\t\t\t\t\tsecondary={dish.servings}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t</List>\n\t\t\t\t\t))}\n\t\t\t\t</Paper>\n\t\t\t</List>\n\t\t</List>\n\t\t<Box mt=\"2rem\">\n\t\t\t<ButtonGroup>\n\t\t\t\t<Button onClick={() => setStep(2)} color=\"default\" variant=\"contained\">\n\t\t\t\t\tPrevious\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={!isValid || isSubmitting}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsubmitForm();\n\t\t\t\t\t\tsetStep(4);\n\t\t\t\t\t}}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t>\n\t\t\t\t\tConfirm\n\t\t\t\t</Button>\n\t\t\t</ButtonGroup>\n\t\t</Box>\n\t</>\n);\n\nexport default Step4;\n","import React from 'react';\nimport {Box} from '@material-ui/core';\n\nconst Success: React.FC<{}> = () => (\n\t<Box>\n\t\t<div>Your Pre-Order is confirmed.</div>\n\t</Box>\n);\n\nexport default Success;\n","import React from 'react';\nimport {Stepper, Step, StepLabel} from '@material-ui/core';\n\nconst StepProgress: React.FC<{activeStep: number; steps: string[]}> = ({\n\tactiveStep,\n\tsteps,\n}) => (\n\t<Stepper activeStep={activeStep} alternativeLabel>\n\t\t{steps.map((label: string) => (\n\t\t\t<Step key={label}>\n\t\t\t\t<StepLabel>{label}</StepLabel>\n\t\t\t</Step>\n\t\t))}\n\t</Stepper>\n);\n\nexport default StepProgress;\n","import React, {useState, Dispatch, SetStateAction} from 'react';\nimport {Formik, Form, FormikProps} from 'formik';\nimport styled from '@emotion/styled';\nimport {generateSchema} from '../../validator';\nimport Step1 from './Step1';\nimport Step2 from './Step2';\nimport Step3 from './Step3';\nimport Step4 from './Step4';\nimport Success from './Success';\nimport {Paper} from '@material-ui/core';\nimport StepProgress from '../StepProgress';\n\nexport const initialValues: FormTypes = {\n\tmeal: '',\n\tpeople: 1,\n\trestaurant: '',\n\tdishes: [\n\t\t{\n\t\t\tdish: '',\n\t\t\tservings: 1,\n\t\t},\n\t],\n};\n\nconst handleSubmit = (values: FormTypes): void => console.log(values);\n\nconst steps = [\n\t'Select meal and number of people',\n\t'Select a restaurant',\n\t'Select your dishes',\n\t'Review',\n];\n\nconst stepPages = [\n\t(\n\t\tformikProps: FormikProps<FormTypes>,\n\t\tsetStep: Dispatch<SetStateAction<number>>,\n\t) => <Step1 formikProps={formikProps} setStep={setStep} />,\n\t(\n\t\tformikProps: FormikProps<FormTypes>,\n\t\tsetStep: Dispatch<SetStateAction<number>>,\n\t) => <Step2 formikProps={formikProps} setStep={setStep} />,\n\t(\n\t\tformikProps: FormikProps<FormTypes>,\n\t\tsetStep: Dispatch<SetStateAction<number>>,\n\t) => <Step3 formikProps={formikProps} setStep={setStep} />,\n\t(\n\t\tformikProps: FormikProps<FormTypes>,\n\t\tsetStep: Dispatch<SetStateAction<number>>,\n\t) => <Step4 formikProps={formikProps} setStep={setStep} />,\n\t() => <Success />,\n];\n\nconst Container = styled(Paper)`\n\tpadding: 3rem 2rem;\n`;\n\nconst FormContainer = styled(Paper)`\n\tpadding: 2rem 1rem;\n`;\n\nconst PreOrderForm: React.FC<{}> = () => {\n\tconst [step, setStep] = useState(0);\n\tconst validationSchema = generateSchema();\n\treturn (\n\t\t<Container>\n\t\t\t<StepProgress activeStep={step} steps={steps} />\n\t\t\t<Formik\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tinitialErrors={{\n\t\t\t\t\tmeal: 'Select meal',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{props => (\n\t\t\t\t\t<FormContainer elevation={3}>\n\t\t\t\t\t\t<Form>{stepPages[step](props, setStep)}</Form>\n\t\t\t\t\t</FormContainer>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</Container>\n\t);\n};\n\nexport default PreOrderForm;\n","import * as yup from 'yup';\n\nexport const generateSchema = () => {\n\tconst dishSchema = yup.object().shape({\n\t\tdish: yup.string().required('Select a dish'),\n\t\tservings: yup.number().required(),\n\t});\n\n\tconst formSchema = yup.object().shape({\n\t\tmeal: yup\n\t\t\t.string()\n\t\t\t.oneOf(['breakfast', 'lunch', 'dinner'])\n\t\t\t.required(),\n\t\tpeople: yup\n\t\t\t.number()\n\t\t\t.min(1)\n\t\t\t.max(10)\n\t\t\t.required(),\n\t\trestaurant: yup.string().required('Please Select Restaurant'),\n\t\tdishes: yup\n\t\t\t.array()\n\t\t\t.of(dishSchema)\n\t\t\t.min(1)\n\t\t\t.test('totalMin', 'At least one dish per person required.', function(\n\t\t\t\tvalue,\n\t\t\t) {\n\t\t\t\tconst {dishes, people} = this.parent;\n\t\t\t\treturn (\n\t\t\t\t\tdishes.reduce(\n\t\t\t\t\t\t(acc: number, val: {servings: number}) => acc + val.servings,\n\t\t\t\t\t\t0,\n\t\t\t\t\t) >= people\n\t\t\t\t);\n\t\t\t})\n\t\t\t.test('totalMax', 'Maximum 10 dishes are allowed.', function(value) {\n\t\t\t\tconst {dishes} = this.parent;\n\t\t\t\treturn (\n\t\t\t\t\tdishes.reduce(\n\t\t\t\t\t\t(acc: number, val: {servings: number}) => acc + val.servings,\n\t\t\t\t\t\t0,\n\t\t\t\t\t) <= 10\n\t\t\t\t);\n\t\t\t}),\n\t});\n\n\treturn formSchema;\n};\n","import React from 'react';\nimport PreOrderForm from './components/PreOrderForm';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<PreOrderForm />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}